"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const asyncs = require("./asyncs");
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#Application
exports.startApplicatoinHandler = (params) => {
    const { action } = params;
    asyncs.start(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#.getCurrent
exports.getCurrentHandler = (params) => {
    const { action } = params;
    asyncs.getCurrent(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#getWindow
exports.getWindowHandler = (params) => {
    const { action } = params;
    asyncs.getWindow(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#.wrap
exports.wrapHandler = (params) => {
    const { action } = params;
    asyncs.wrap(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#addEventListener
exports.addListenerHandler = (params) => {
    const { action } = params;
    asyncs.addListener(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#close
exports.quitHandler = (params) => {
    const { action } = params;
    asyncs.quit(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#getChildWindows
exports.getChildWindowsHandler = (params) => {
    const { action } = params;
    asyncs.getChildWindows(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#getInfo
exports.getInfoHandler = (params) => {
    const { action } = params;
    asyncs.getInfo(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#getShortcuts
exports.getShortcutsHandler = (params) => {
    const { action } = params;
    asyncs.getShortcuts(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#getTrayIconInfo
exports.getTrayIconInfoHandler = (params) => {
    const { action } = params;
    asyncs.getTrayIconInfo(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#getZoomLevel
exports.getZoomLevelHandler = (params) => {
    const { action } = params;
    asyncs.getZoomLevel(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#isRunning
exports.isRunningHandler = (params) => {
    const { action } = params;
    asyncs.isRunning(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#removeEventListener
exports.removeListenerHandler = (params) => {
    const { action } = params;
    asyncs.removeListener(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#restart
exports.restartHandler = (params) => {
    const { action } = params;
    asyncs.restart(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#scheduleRestart
exports.scheduleRestartHandler = (params) => {
    const { action } = params;
    asyncs.scheduleRestart(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#setShortcuts
exports.setShortcutsHandler = (params) => {
    const { action } = params;
    asyncs.setShortcuts(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#setTrayIcon
exports.setTrayIconHandler = (params) => {
    const { action } = params;
    asyncs.setTrayIcon(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#setZoomLevel
exports.setZoomLevelHandler = (params) => {
    const { action } = params;
    asyncs.setZoomLevel(action).catch(e => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Application.html#terminate
exports.terminateHandler = (params) => {
    const { action } = params;
    asyncs.terminate(action).catch(e => {
        // eat the exception
    });
};
