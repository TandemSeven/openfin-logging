import { Action } from 'redux-actions';
import * as types from "./types";
/**
 * Wrappered apis of Application package
 * //https://cdn.openfin.co/docs/javascript/stable/Application.html
 */
export declare function start(action: Action<types.StartApplicationPayload>): Promise<Action<types.StartApplicationResPayload>>;
export declare function getCurrent(action: Action<types.GetCurrentPayload>): Promise<Action<types.GetCurrentResPayload>>;
export declare function getWindow(action: Action<types.GetWindowPayload>): Promise<Action<types.GetWindowResPayload>>;
export declare function wrap(action: Action<types.WrapPayload>): Promise<Action<types.WrapResPayload>>;
export declare function addListener(action: Action<types.AddListenerPayload>): Promise<Action<types.AddListenerResPayload>>;
export declare function quit(action: Action<types.QuitPayload>): Promise<Action<types.QuitResPayload>>;
export declare function getChildWindows(action: Action<types.GetChildWindowsPayload>): Promise<Action<types.GetChildWindowsResPayload>>;
export declare function getInfo(action: Action<types.GetInfoPayload>): Promise<Action<types.GetInfoResPayload>>;
export declare function getShortcuts(action: Action<types.GetShortcutsPayload>): Promise<Action<types.GetShortcutsResPayload>>;
export declare function getTrayIconInfo(action: Action<types.GetTrayIconInfoPayload>): Promise<Action<types.GetTrayIconInfoResPayload>>;
export declare function getZoomLevel(action: Action<types.GetZoomLevelPayload>): Promise<Action<types.GetZoomLevelResPayload>>;
export declare function isRunning(action: Action<types.IsRunningPayload>): Promise<Action<types.IsRunningResPayload>>;
export declare function removeListener(action: Action<types.RemoveListenerPayload>): Promise<Action<types.RemoveListenerResPayload>>;
export declare function restart(action: Action<types.RestartPayload>): Promise<Action<types.RestartResPayload>>;
export declare function scheduleRestart(action: Action<types.ScheduleRestartPayload>): Promise<Action<types.ScheduleRestartResPayload>>;
export declare function setShortcuts(action: Action<types.SetShortcutsPayload>): Promise<Action<types.SetShortcutsResPayload>>;
export declare function setTrayIcon(action: Action<types.SetTrayIconPayload>): Promise<Action<types.SetTrayIconResPayload>>;
export declare function setZoomLevel(action: Action<types.SetZoomLevelPayload>): Promise<Action<types.SetZoomLevelResPayload>>;
export declare function terminate(action: Action<types.TerminatePayload>): Promise<Action<types.TerminateResPayload>>;
