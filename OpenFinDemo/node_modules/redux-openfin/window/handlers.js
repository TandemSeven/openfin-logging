"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const asyncs = require("./asyncs");
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#.getCurrent
exports.getCurrentHandler = (params) => {
    const { action } = params;
    asyncs.getCurrent(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#.wrap
exports.wrapHandler = (params) => {
    const { action } = params;
    asyncs.wrap(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#addEventListener
exports.addListenerHandler = (params) => {
    const { action } = params;
    asyncs.addListener(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#authenticate
exports.authenticateHandler = (params) => {
    const { action } = params;
    asyncs.authenticate(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#bringToFront
exports.bringToFrontHandler = (params) => {
    const { action } = params;
    asyncs.bringToFront(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#Window
exports.createWindowHandler = (params) => {
    const { action } = params;
    asyncs.createWindow(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#close
exports.closeHandler = (params) => {
    const { action } = params;
    asyncs.close(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/tutorial-window.disableFrame.html
exports.disableUserMovementHandler = (params) => {
    const { action } = params;
    asyncs.disableUserMovement(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/tutorial-window.enableFrame.html
exports.enableUserMovementHandler = (params) => {
    const { action } = params;
    asyncs.enableUserMovement(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#focus
exports.focusHandler = (params) => {
    const { action } = params;
    asyncs.focus(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#getGroup
exports.getGroupHandler = (params) => {
    const { action } = params;
    asyncs.getGroup(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#getBounds
exports.getBoundsHandler = (params) => {
    const { action } = params;
    asyncs.getBounds(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#getState
exports.getStateHandler = (params) => {
    const { action } = params;
    asyncs.getState(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#getOptions
exports.getOptionsHandler = (params) => {
    const { action } = params;
    asyncs.getOptions(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#hide
exports.hideHandler = (params) => {
    const { action } = params;
    asyncs.hide(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#joinGroup
exports.joinGroupHandler = (params) => {
    const { action } = params;
    asyncs.joinGroup(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#leaveGroup
exports.leaveGroupHandler = (params) => {
    const { action } = params;
    asyncs.leaveGroup(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#maximize
exports.maximizeHandler = (params) => {
    const { action } = params;
    asyncs.maximize(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#mergeGroups
exports.mergeGroupsHandler = (params) => {
    const { action } = params;
    asyncs.mergeGroups(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#minimize
exports.minimizeHandler = (params) => {
    const { action } = params;
    asyncs.minimize(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#moveBy
exports.moveByHandler = (params) => {
    const { action } = params;
    asyncs.moveBy(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#moveTo
exports.moveToHandler = (params) => {
    const { action } = params;
    asyncs.moveTo(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#restore
exports.restoreHandler = (params) => {
    const { action } = params;
    asyncs.restore(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#show
exports.showHandler = (params) => {
    const { action } = params;
    asyncs.show(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#setAsForeground
exports.setAsForegroundHandler = (params) => {
    const { action } = params;
    asyncs.setAsForeground(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#setBounds
exports.setBoundsHandler = (params) => {
    const { action } = params;
    asyncs.setBounds(action).catch((e) => {
        // eat the exception
    });
};
//http://cdn.openfin.co/jsdocs/beta/fin.Window.html#updateOptions
exports.updateOptionsHandler = (params) => {
    const { action } = params;
    asyncs.updateOptions(action).catch((e) => {
        // eat the exception
    });
};
