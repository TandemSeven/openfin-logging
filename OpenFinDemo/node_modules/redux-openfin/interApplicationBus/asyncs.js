"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const handlerActions = require("./actions/handlerActionCreator");
const wrapAsyncFun_1 = require("../utils/wrapAsyncFun");
function publish(action) {
    return __awaiter(this, void 0, void 0, function* () {
        const { topic, message } = action.payload;
        return wrapAsyncFun_1.default(action, handlerActions.publishRes, (fin) => __awaiter(this, void 0, void 0, function* () {
            yield fin.InterApplicationBus.publish(topic, message);
            return handlerActions.publishRes({});
        }));
    });
}
exports.publish = publish;
function subscribe(action) {
    return __awaiter(this, void 0, void 0, function* () {
        const { source, topic, listener } = action.payload;
        return wrapAsyncFun_1.default(action, handlerActions.subscribeRes, (fin) => __awaiter(this, void 0, void 0, function* () {
            yield fin.InterApplicationBus.subscribe(source, topic, listener);
            return handlerActions.subscribeRes({});
        }));
    });
}
exports.subscribe = subscribe;
