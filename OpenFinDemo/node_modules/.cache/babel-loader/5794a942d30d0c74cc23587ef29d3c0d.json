{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Base_1 = require(\"./Base\");\n\nvar Channel_1 = require(\"./Channel\");\n\nvar OpenFinMock_1 = require(\"../OpenFinMock\");\n\nvar InterApplicationBus = function (_super) {\n  __extends(InterApplicationBus, _super);\n\n  function InterApplicationBus() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  InterApplicationBus.publish = function (topic, message, callback, errCallback) {\n    if (InterApplicationBus.listeners[topic]) {\n      InterApplicationBus.listeners[topic].forEach(function (topicCb) {\n        topicCb(message, '', '');\n      });\n    }\n\n    InterApplicationBus.subscribeListeners.forEach(function (cb) {\n      cb('', topic, '');\n    });\n    callback();\n  };\n\n  InterApplicationBus.addSubscribeListener = function (listener) {\n    InterApplicationBus.subscribeListeners.push(listener);\n  };\n\n  InterApplicationBus.subscribe = function (senderUuid, name, topic, listener, callback, errCallback) {\n    if (!InterApplicationBus.listeners[topic]) {\n      InterApplicationBus.listeners[topic] = [];\n    }\n\n    InterApplicationBus.listeners[topic].push(listener);\n    callback();\n  };\n\n  InterApplicationBus.staticMethods = ['addUnsubscribeListener', 'removeSubscribeListener', 'removeUnsubscribeListener', 'send', 'unsubscribe'];\n  InterApplicationBus.instanceMethods = [];\n  InterApplicationBus.subscribeListeners = [];\n  InterApplicationBus.listeners = {};\n  InterApplicationBus.Channel = OpenFinMock_1.OpenFinMock.generateMethods('InterApplicationBus.Channel', Channel_1.Channel);\n  return InterApplicationBus;\n}(Base_1.BaseApiClass);\n\nexports.InterApplicationBus = InterApplicationBus;","map":null,"metadata":{},"sourceType":"script"}