{"ast":null,"code":"var _jsxFileName = \"/Users/tandemseven/dev/openfin/OpenFinDemo/src/pages/home.js\";\nimport React, { Component } from \"react\";\nimport { InitializeReactOpenfin, ReactOpenfin } from 'react-openfin';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    const app = window.fin.desktop.Application.getCurrent();\n    this.state = {\n      application: app,\n      window: null,\n      notification: null\n    };\n    this.launchWindow = this.launchWindow.bind(this);\n    this.windowClosed = this.windowClosed.bind(this);\n    this.sendMessageToWindow = this.sendMessageToWindow.bind(this);\n    this.showNotification = this.showNotification.bind(this);\n    this.notificationClosed = this.notificationClosed.bind(this);\n    this.sendMessageToNotification = this.sendMessageToNotification.bind(this);\n  }\n\n  async launchWindow() {\n    if (window.fin) {\n      const childWindow = await window.fin.Window.create({\n        name: \"Open Fin Window\",\n        url: \"http://localhost:3000/window\",\n        defaultWidth: 600,\n        defaultHeight: 400,\n        resizable: true,\n        autoShow: true\n      });\n      this.state.application.getChildWindows(children => {\n        console.log(children);\n        children.map(window => {\n          if (window.name === \"Open Fin Window\") {\n            window.addEventListener(\"closing\", this.windowClosed);\n          }\n        });\n      });\n      this.setState({\n        window: childWindow\n      });\n    } else {\n      console.log(\"No Open Fin window found\");\n    }\n  }\n\n  windowClosed() {\n    this.setState({\n      window: null\n    });\n  }\n\n  sendMessageToWindow() {\n    const successCallback = () => {\n      console.log(\"Success\");\n    };\n\n    const errorCallback = error => {\n      console.log(\"Error: \", error);\n    };\n\n    if (window.fin) {\n      window.fin.desktop.InterApplicationBus.send(this.state.window.identity.uuid, \"testTopic\", {\n        message: \"message from application to window\"\n      }, successCallback, errorCallback);\n    } else {\n      console.log(\"No Open Fin window found\");\n    }\n  }\n\n  showNotification() {\n    if (window.fin) {\n      const notification = new window.fin.desktop.Notification({\n        url: \"http://localhost:3000/notification\",\n        message: {\n          value: \"inital message\"\n        },\n        onClick: () => {\n          console.log(\"clicked\");\n        },\n        onClose: this.notificationClosed,\n        onDismiss: this.notificationClosed,\n        onError: reason => {\n          console.log(\"error: \" + reason);\n        },\n        onMessage: message => {\n          console.log(\"message: \", message);\n        },\n        onShow: () => {\n          console.log(\"notification shown :\", notification);\n        }\n      });\n      this.setState({\n        notification\n      });\n    } else {\n      console.log(\"No Open Fin window found\");\n    }\n  }\n\n  notificationClosed() {\n    console.log(\"closed\");\n    this.setState({\n      notification: null\n    });\n  }\n\n  sendMessageToNotification() {\n    this.state.notification.sendMessage({\n      value: \"message from application to notification\"\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.launchWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"New Window\"), this.state.window && React.createElement(\"button\", {\n      onClick: this.sendMessageToWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Send Message to Window\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.showNotification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Show Notification\"), this.state.notification && React.createElement(\"button\", {\n      onClick: this.sendMessageToNotification,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Send Message to Notification\")));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/tandemseven/dev/openfin/OpenFinDemo/src/pages/home.js"],"names":["React","Component","InitializeReactOpenfin","ReactOpenfin","Home","constructor","props","app","window","fin","desktop","Application","getCurrent","state","application","notification","launchWindow","bind","windowClosed","sendMessageToWindow","showNotification","notificationClosed","sendMessageToNotification","childWindow","Window","create","name","url","defaultWidth","defaultHeight","resizable","autoShow","getChildWindows","children","console","log","map","addEventListener","setState","successCallback","errorCallback","error","InterApplicationBus","send","identity","uuid","message","Notification","value","onClick","onClose","onDismiss","onError","reason","onMessage","onShow","sendMessage","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { InitializeReactOpenfin, ReactOpenfin } from 'react-openfin';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    const app = window.fin.desktop.Application.getCurrent();\n    this.state = {\n      application: app,\n      window: null,\n      notification: null\n    };\n\n    this.launchWindow = this.launchWindow.bind(this);\n    this.windowClosed = this.windowClosed.bind(this);\n    this.sendMessageToWindow = this.sendMessageToWindow.bind(this);\n    this.showNotification = this.showNotification.bind(this);\n    this.notificationClosed = this.notificationClosed.bind(this);\n    this.sendMessageToNotification = this.sendMessageToNotification.bind(this);\n  }\n\n  async launchWindow() {\n    if (window.fin) {\n      const childWindow = await window.fin.Window.create({\n        name: \"Open Fin Window\",\n        url: \"http://localhost:3000/window\",\n        defaultWidth: 600,\n        defaultHeight: 400,\n        resizable: true,\n        autoShow: true\n      });\n\n      this.state.application.getChildWindows(children => {\n        console.log(children)\n        children.map(window => {\n          if (window.name === \"Open Fin Window\") {\n            window.addEventListener(\"closing\", this.windowClosed);\n          }\n        });\n      });\n\n      this.setState({\n        window: childWindow\n      });\n    } else {\n      console.log(\"No Open Fin window found\");\n    }\n  }\n\n  windowClosed() {\n    this.setState({\n      window: null\n    });\n  }\n\n  sendMessageToWindow() {\n    const successCallback = () => {\n      console.log(\"Success\");\n    };\n\n    const errorCallback = error => {\n      console.log(\"Error: \", error);\n    };\n\n    if (window.fin) {\n      window.fin.desktop.InterApplicationBus.send(\n        this.state.window.identity.uuid,\n        \"testTopic\",\n        { message: \"message from application to window\" },\n        successCallback,\n        errorCallback\n      );\n    } else {\n      console.log(\"No Open Fin window found\");\n    }\n  }\n\n  showNotification() {\n    if (window.fin) {\n      const notification = new window.fin.desktop.Notification({\n        url: \"http://localhost:3000/notification\",\n        message: { value: \"inital message\" },\n        onClick: () => {\n          console.log(\"clicked\");\n        },\n        onClose: this.notificationClosed,\n        onDismiss: this.notificationClosed,\n        onError: reason => {\n          console.log(\"error: \" + reason);\n        },\n        onMessage: message => {\n          console.log(\"message: \", message);\n        },\n        onShow: () => {\n          console.log(\"notification shown :\", notification);\n        }\n      });\n\n      this.setState({\n        notification\n      });\n    } else {\n      console.log(\"No Open Fin window found\");\n    }\n  }\n\n  notificationClosed() {\n    console.log(\"closed\");\n    this.setState({\n      notification: null\n    });\n  }\n\n  sendMessageToNotification() {\n    this.state.notification.sendMessage({\n      value: \"message from application to notification\"\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <button onClick={this.launchWindow}>New Window</button>\n          {this.state.window && (\n            <button onClick={this.sendMessageToWindow}>\n              Send Message to Window\n            </button>\n          )}\n        </div>\n        <div>\n          <button onClick={this.showNotification}>Show Notification</button>\n          {this.state.notification && (\n            <button onClick={this.sendMessageToNotification}>\n              Send Message to Notification\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}