{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Base_1 = require(\"./Base\");\n\nvar windowRegistry_1 = require(\"../helper/windowRegistry\");\n\nvar Application = function (_super) {\n  __extends(Application, _super);\n\n  function Application() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Application.getCurrent = function () {\n    return new Application();\n  };\n\n  Application.prototype.close = function (force, callback, errorCallback) {\n    try {\n      window.close();\n\n      if (callback) {\n        callback();\n      }\n    } catch (e) {\n      if (e) {\n        errorCallback(e);\n      }\n    }\n  };\n\n  Application.prototype.getChildWindows = function (callback, errorCallback) {\n    if (callback) {\n      setTimeout(function () {\n        try {\n          callback(Object.keys(windowRegistry_1.default).map(function (key) {\n            return windowRegistry_1.default[key];\n          }));\n        } catch (e) {\n          if (e) {\n            errorCallback(e);\n          }\n        }\n      }, 0);\n    }\n  };\n\n  Application.staticMethods = ['wrap'];\n  Application.instanceMethods = ['getWindow', 'addEventListener', 'createFromManifest', 'getGroups', 'getInfo', 'getManifest', 'getParentUuid', 'getShortcuts', 'getTrayIconInfo', 'getZoomLevel', 'isRunning', 'registerUser', 'removeEventListener', 'removeTrayIcon', 'restart', 'run', 'scheduleRestart', 'setShortcuts', 'setTrayIcon', 'setZoomLevel', 'terminate'];\n  return Application;\n}(Base_1.BaseApiClass);\n\nexports.Application = Application;","map":null,"metadata":{},"sourceType":"script"}