{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst openfin_browser_adapter_1 = require(\"openfin-browser-adapter\");\n\nconst sharedActions_1 = require(\"./reduxs/sharedActions\");\n\nconst initSharedActionsDict = new Set();\nsharedActions_1.default.forEach(actionType => {\n  initSharedActionsDict.add(actionType);\n});\nconst initState = {\n  fin: void 0,\n  finUuid: void '',\n  sharedActions: [...sharedActions_1.default],\n  sharedActionsDict: initSharedActionsDict,\n  i18n: void 0,\n  hist: void 0,\n  dockingOptions: {},\n  launchBarItems: [],\n  configTabs: [],\n  clientReduxDispatch: void 0,\n  config: {\n    publicUrl: '',\n    logActions: false,\n    enableLoadingView: true,\n    enableAutoDocking: true,\n    defaultDashboardDrawerShown: true,\n    defaultViewUrl: '/dashboard/view-one',\n    defaultDashboardViewUrl: '/dashboard/accessibility',\n    defaultDashboardMinWidth: 570,\n    defaultDashboardMinHeight: 300,\n    defaultLoadingBannerWidth: 728,\n    defaultLoadingBannerHeight: 450,\n    defaultAppHeight: 900,\n    defaultAppWidth: 1400,\n    newWindowTop: 60,\n    newWindowLeft: 300,\n    newWindowWidth: 640,\n    newWindowHeight: 320,\n    newWindowDeltaLeft: 40,\n    newWindowDeltaHeight: 40,\n    onAppAwaitDelayTime: 4000,\n    onAppChildAwaitDelayTime: 200,\n    onAppNotificationAwaitDelayTime: 200,\n    onAppClosingAwaitDelayTime: 200\n  },\n  seed: void 0\n};\n\nexports.InitializeReactOpenfin = params => {\n  if (params.fin) {\n    window.fin = params.fin;\n    initState.fin = params.fin;\n  } else {\n    window.fin = new openfin_browser_adapter_1.BrowserAdapter({\n      finUuid: params.finUuid,\n      silentMode: params.finMockupForceSilentMode\n    });\n    initState.fin = window.fin;\n  }\n\n  initState.finUuid = params.finUuid;\n\n  if (params.sharedActions && params.sharedActions.length > 0) {\n    initState.sharedActions = [...sharedActions_1.default, ...params.sharedActions];\n    params.sharedActions.forEach(actionType => {\n      initState.sharedActionsDict.add(actionType);\n    });\n  }\n\n  initState.i18n = params.i18n;\n  initState.hist = params.hist;\n\n  if (params.config) {\n    initState.config = Object.assign({}, initState.config, params.config);\n  }\n\n  if (params.dockingOptions) {\n    initState.dockingOptions = params.dockingOptions;\n  }\n\n  if (params.launchBarItems) {\n    initState.launchBarItems = params.launchBarItems;\n  }\n\n  if (params.configTabs) {\n    initState.configTabs = params.configTabs.filter(oneConfigTab => oneConfigTab._name !== 'application');\n  }\n\n  if (params.clientReduxStore) {\n    initState.clientReduxDispatch = params.clientReduxStore.dispatch;\n  }\n};\n\nexports.default = initState;","map":null,"metadata":{},"sourceType":"script"}