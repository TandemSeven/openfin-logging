{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst redux_actions_1 = require(\"redux-actions\");\n\nconst makeType_1 = require(\"../../utils/makeType\"); // application general\n\n\nexports.APPLICATION_SET_LOADING_MSG = makeType_1.makeReqType('APPLICATION_SET_LOADING_MSG'); // app\n\nexports.APPLICATION_START = makeType_1.makeReqType('APPLICATION_START');\nexports.APPLICATION_AWAIT = makeType_1.makeResType('APPLICATION_AWAIT');\nexports.APPLICATION_READY = makeType_1.makeReqType('APPLICATION_READY');\nexports.APPLICATION_STARTED = makeType_1.makeResType('APPLICATION_STARTED'); // child win\n\nexports.APPLICATION_CHILD_START = makeType_1.makeReqType('APPLICATION_CHILD_START');\nexports.APPLICATION_CHILD_AWAIT = makeType_1.makeResType('APPLICATION_CHILD_AWAIT');\nexports.APPLICATION_CHILD_READY = makeType_1.makeReqType('APPLICATION_CHILD_READY');\nexports.APPLICATION_CHILD_STARTED = makeType_1.makeResType('APPLICATION_CHILD_STARTED'); // notification win\n\nexports.APPLICATION_NOTIFICATION_START = makeType_1.makeReqType('APPLICATION_NOTIFICATION_START');\nexports.APPLICATION_NOTIFICATION_AWAIT = makeType_1.makeResType('APPLICATION_NOTIFICATION_AWAIT');\nexports.APPLICATION_NOTIFICATION_READY = makeType_1.makeReqType('APPLICATION_NOTIFICATION_READY');\nexports.APPLICATION_NOTIFICATION_STARTED = makeType_1.makeResType('APPLICATION_NOTIFICATION_STARTED'); // ---- ----\n\nexports.APPLICATION_DRAWER_TOGGLE = makeType_1.makeReqType('APPLICATION_DRAWER_TOGGLE');\nexports.APPLICATION_TOGGLE_WINDOW_STATE = makeType_1.makeReqType('APPLICATION_TOGGLE_WINDOW_STATE');\nexports.APPLICATION_CUR_WIN_CLOSING = makeType_1.makeResType('APPLICATION_CUR_WIN_CLOSING');\nexports.APPLICATION_CUR_WIN_READY_TO_CLOSE = makeType_1.makeReqType('APPLICATION_CUR_WIN_READY_TO_CLOSE');\nexports.applicationSetLoadingMsg = redux_actions_1.createAction(exports.APPLICATION_SET_LOADING_MSG, loadingMsg => ({\n  loadingMsg\n}));\nexports.applicationStart = redux_actions_1.createAction(exports.APPLICATION_START);\nexports.applicationAwait = redux_actions_1.createAction(exports.APPLICATION_AWAIT);\nexports.applicationReady = redux_actions_1.createAction(exports.APPLICATION_READY, option => option);\nexports.applicationStarted = redux_actions_1.createAction(exports.APPLICATION_STARTED);\nexports.applicationChildStart = redux_actions_1.createAction(exports.APPLICATION_CHILD_START);\nexports.applicationChildAwait = redux_actions_1.createAction(exports.APPLICATION_CHILD_AWAIT);\nexports.applicationChildReady = redux_actions_1.createAction(exports.APPLICATION_CHILD_READY, option => option);\nexports.applicationChildStarted = redux_actions_1.createAction(exports.APPLICATION_CHILD_STARTED);\nexports.applicationNotificationStart = redux_actions_1.createAction(exports.APPLICATION_NOTIFICATION_START);\nexports.applicationNotificationAwait = redux_actions_1.createAction(exports.APPLICATION_NOTIFICATION_AWAIT);\nexports.applicationNotificationReady = redux_actions_1.createAction(exports.APPLICATION_NOTIFICATION_READY, option => option);\nexports.applicationNotificationStarted = redux_actions_1.createAction(exports.APPLICATION_NOTIFICATION_STARTED);\nexports.applicationDrawerToggle = redux_actions_1.createAction(exports.APPLICATION_DRAWER_TOGGLE);\nexports.applicationToggleWindowState = redux_actions_1.createAction(exports.APPLICATION_TOGGLE_WINDOW_STATE);\nexports.applicationCurWinClosing = redux_actions_1.createAction(exports.APPLICATION_CUR_WIN_CLOSING);\nexports.applicationCurWinReadyToClose = redux_actions_1.createAction(exports.APPLICATION_CUR_WIN_READY_TO_CLOSE, option => option); // snackbar\n\nexports.APPLICATION_NEW_SNACKBAR = makeType_1.makeReqType('APPLICATION_NEW_SNACKBAR');\nexports.APPLICATION_SET_SNACKBAR_STATUS = makeType_1.makeReqType('APPLICATION_SET_SNACKBAR_STATUS');\nexports.APPLICATION_PROCESS_SNACKBAR_QUEUE = makeType_1.makeReqType('APPLICATION_PROCESS_SNACKBAR_QUEUE');\nexports.APPLICATION_CLOSE_SNACKBAR = makeType_1.makeReqType('APPLICATION_CLOSE_SNACKBAR');\nexports.applicationNewSnackbar = redux_actions_1.createAction(exports.APPLICATION_NEW_SNACKBAR, option => option);\nexports.applicationSetSnackbarStatus = redux_actions_1.createAction(exports.APPLICATION_SET_SNACKBAR_STATUS, snackBarOpen => ({\n  snackBarOpen\n}));\nexports.applicationProcessSnackbarQueue = redux_actions_1.createAction(exports.APPLICATION_PROCESS_SNACKBAR_QUEUE);\nexports.applicationCloseSnackbar = redux_actions_1.createAction(exports.APPLICATION_CLOSE_SNACKBAR, (event, reason) => ({\n  event,\n  reason\n})); // snap dock\n\nexports.APPLICATION_UPDATE_DOCK_STATUS = makeType_1.default('APPLICATION_UPDATE_DOCK_STATUS');\nexports.applicationUpdateDockStatus = redux_actions_1.createAction(exports.APPLICATION_UPDATE_DOCK_STATUS, docked => ({\n  docked\n})); // launch bar\n\nexports.APPLICATION_LAUNCH_BAR_TOGGLE = makeType_1.makeReqType('APPLICATION_LAUNCH_BAR_TOGGLE');\nexports.APPLICATION_LAUNCH_BAR_TOGGLED = makeType_1.makeResType('APPLICATION_LAUNCH_BAR_TOGGLED');\nexports.APPLICATION_LAUNCH_BAR_TOGGLE_COLLAPSE = makeType_1.makeReqType('APPLICATION_LAUNCH_BAR_TOGGLE_COLLAPSE');\nexports.APPLICATION_LAUNCH_NEW_WINDOW = makeType_1.makeReqType('APPLICATION_LAUNCH_NEW_WINDOW');\nexports.APPLICATION_LAUNCH_BAR_CLOSE = makeType_1.makeReqType('APPLICATION_LAUNCH_BAR_CLOSE');\nexports.applicationLaunchBarToggle = redux_actions_1.createAction(exports.APPLICATION_LAUNCH_BAR_TOGGLE);\nexports.applicationLaunchBarToggled = redux_actions_1.createAction(exports.APPLICATION_LAUNCH_BAR_TOGGLED, status => ({\n  status\n}));\nexports.applicationLaunchBarToggleCollapse = redux_actions_1.createAction(exports.APPLICATION_LAUNCH_BAR_TOGGLE_COLLAPSE);\nexports.applicationLaunchNewWindow = redux_actions_1.createAction(exports.APPLICATION_LAUNCH_NEW_WINDOW, appJson => appJson);\nexports.applicationLaunchBarClose = redux_actions_1.createAction(exports.APPLICATION_LAUNCH_BAR_CLOSE); // network\n\nexports.APPLICATION_NETWORK_ONLINE = makeType_1.default('APPLICATION_NETWORK_ONLINE');\nexports.applicationNetworkOnline = redux_actions_1.createAction(exports.APPLICATION_NETWORK_ONLINE);\nexports.APPLICATION_NETWORK_OFFLINE = makeType_1.default('APPLICATION_NETWORK_OFF_LINE');\nexports.applicationNetworkOffline = redux_actions_1.createAction(exports.APPLICATION_NETWORK_OFFLINE);","map":null,"metadata":{},"sourceType":"script"}