{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Base_1 = require(\"./Base\");\n\nvar windowRegistry_1 = require(\"../helper/windowRegistry\");\n\nvar Window = function (_super) {\n  __extends(Window, _super);\n\n  function Window(data, callback) {\n    var _this = _super.call(this) || this;\n\n    var opened;\n\n    if (data && data.url) {\n      opened = window.open(data.url, '_blank');\n    }\n\n    _this.contentWindow = opened || window;\n    _this.name = data.name;\n\n    if (callback) {\n      setTimeout(callback, 0);\n    }\n\n    windowRegistry_1.default[data.name] = _this;\n    return _this;\n  }\n\n  Window.wrap = function (appUuid, windowName) {\n    if (!windowRegistry_1.default[windowName]) {\n      windowRegistry_1.default[windowName] = new Window({\n        name: windowName\n      }, function () {});\n    }\n\n    return windowRegistry_1.default[windowName];\n  };\n\n  Window.getCurrent = function () {\n    if (this._name) {\n      return windowRegistry_1.default[this._name];\n    } else {\n      Window._name = 'current-window-name';\n      return new Window({\n        name: Window._name\n      }, function () {});\n    }\n  };\n\n  Window.prototype.close = function (force, callback, errorCallback) {\n    try {\n      this.contentWindow.close();\n\n      if (callback) {\n        callback();\n      }\n    } catch (error) {\n      if (errorCallback) {\n        errorCallback(error);\n      }\n    }\n  };\n\n  Window.prototype.getParentWindow = function () {\n    if (window.location.pathname === '/') {\n      return this;\n    }\n\n    return null;\n  };\n\n  Window.prototype.getBounds = function (success) {\n    var result = {};\n\n    if (success) {\n      result.left = this.contentWindow.screenX;\n      result.top = this.contentWindow.screenY;\n      result.width = this.contentWindow.outerWidth;\n      result.height = this.contentWindow.outerHeight;\n      success(result);\n    }\n  };\n\n  Window._name = null;\n  Window.staticMethods = [];\n  Window.instanceMethods = ['getNativeWindow', 'getParentApplication', 'addEventListener', 'animate', 'authenticate', 'blur', 'bringToFront', 'disableFrame', 'enableFrame', 'executeJavaScript', 'flash', 'focus', 'getAllFrames', 'getGroup', 'getInfo', 'getOptions', 'getSnapshot', 'getState', 'getZoomLevel', 'hide', 'isShowing', 'joinGroup', 'leaveGroup', 'maximize', 'mergeGroups', 'minimize', 'moveBy', 'moveTo', 'navigate', 'navigateBack', 'navigateForward', 'reload', 'removeEventListener', 'resizeBy', 'resizeTo', 'restore', 'setAsForeground', 'setBounds', 'setZoomLevel', 'show', 'showAt', 'stopFlashing', 'stopNavigation', 'updateOptions'];\n  return Window;\n}(Base_1.BaseApiClass);\n\nexports.Window = Window;","map":null,"metadata":{},"sourceType":"script"}