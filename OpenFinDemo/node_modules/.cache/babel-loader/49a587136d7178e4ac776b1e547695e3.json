{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar OpenFinMock = function () {\n  function OpenFinMock() {}\n\n  OpenFinMock.generateMethods = function (name, Klass) {\n    var staticMethods = Klass.staticMethods || [];\n    var instanceMethods = Klass.instanceMethods || [];\n\n    var _loop_1 = function (method) {\n      if (Klass[method]) {\n        console.warn(\"[OpenFinMock] Warning! Attempt to overwrite already implemented static methods:`\" + name + \".\" + method + \"`. This method will not be overwritten. Remove this method from `\" + name + \".staticMethods`.\");\n        return \"continue\";\n      }\n\n      Klass[method] = function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var argsMsg = '';\n\n        if (args.length) {\n          argsMsg = \"This method also received the arguments: \" + JSON.stringify(args, null, 2);\n        }\n\n        if (args.length > 1 && typeof args[args.length - 2] === 'function') {\n          args[args.length - 2]();\n        }\n\n        if (!OpenFinMock.silentMode) {\n          console.info(\"[OpenFinMock] Static method `\" + name + \".\" + method + \"` not implemented. \\n                        \" + argsMsg + \" This method will not return anything, which will probably have unintended consequence.\\n                        Implement this method on the `\" + name + \"` class to return a value.               \\n                    \");\n        }\n      };\n    };\n\n    for (var _i = 0, staticMethods_1 = staticMethods; _i < staticMethods_1.length; _i++) {\n      var method = staticMethods_1[_i];\n\n      _loop_1(method);\n    }\n\n    var _loop_2 = function (method) {\n      if (Klass.prototype[method]) {\n        console.warn(\"[OpenFinMock] Warning! Attemp to overwrite already implemented instance method: `\" + name + \"#\" + method + \"`.\\n                    This method will not be overwritten. Remove this method from `\" + name + \".instanceMethods`.       \\n                \");\n        return \"continue\";\n      }\n\n      Klass.prototype[method] = function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var argsMsg = '';\n\n        if (args.length) {\n          argsMsg = \"This method also received the arguments: \" + JSON.stringify(args, null, 2);\n        }\n\n        if (args.length > 1 && typeof args[args.length - 2] === 'function') {\n          args[args.length - 2]();\n        }\n\n        if (!OpenFinMock.silentMode) {\n          console.info(\"[OpenFinMock] Instance method `\" + name + \".\" + method + \"` not implemented. \\n                        \" + argsMsg + \" This method will not return anything, which will probably have unintended consequence.\\n                        Implement this method on the `\" + name + \"` class to return a value.               \\n                    \");\n        }\n      };\n    };\n\n    for (var _a = 0, instanceMethods_1 = instanceMethods; _a < instanceMethods_1.length; _a++) {\n      var method = instanceMethods_1[_a];\n\n      _loop_2(method);\n    }\n\n    return Klass;\n  };\n\n  OpenFinMock.silentMode = false;\n  return OpenFinMock;\n}();\n\nexports.OpenFinMock = OpenFinMock;","map":null,"metadata":{},"sourceType":"script"}