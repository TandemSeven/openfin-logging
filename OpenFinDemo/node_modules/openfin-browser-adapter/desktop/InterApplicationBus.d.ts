import { BaseApiClass } from './Base';
declare type SubscribeListener = (uuid: string, topic: string, name: string) => void;
declare type TopicSubscribeListener = (message: string, uuid: string, name: string) => void;
export declare class InterApplicationBus extends BaseApiClass {
    static staticMethods: string[];
    static instanceMethods: string[];
    static subscribeListeners: SubscribeListener[];
    static listeners: {
        [key: string]: TopicSubscribeListener[];
    };
    static Channel: any;
    static publish(topic: string, message: string, callback?: Function, errCallback?: Function): void;
    static addSubscribeListener(listener: SubscribeListener): void;
    static subscribe(senderUuid: string, name: string, topic: string, listener: TopicSubscribeListener, callback?: Function, errCallback?: Function): void;
}
export {};
