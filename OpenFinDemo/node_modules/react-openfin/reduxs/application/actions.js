"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const redux_actions_1 = require("redux-actions");
const makeType_1 = require("../../utils/makeType");
// application general
exports.APPLICATION_SET_LOADING_MSG = makeType_1.makeReqType('APPLICATION_SET_LOADING_MSG');
// app
exports.APPLICATION_START = makeType_1.makeReqType('APPLICATION_START');
exports.APPLICATION_AWAIT = makeType_1.makeResType('APPLICATION_AWAIT');
exports.APPLICATION_READY = makeType_1.makeReqType('APPLICATION_READY');
exports.APPLICATION_STARTED = makeType_1.makeResType('APPLICATION_STARTED');
// child win
exports.APPLICATION_CHILD_START = makeType_1.makeReqType('APPLICATION_CHILD_START');
exports.APPLICATION_CHILD_AWAIT = makeType_1.makeResType('APPLICATION_CHILD_AWAIT');
exports.APPLICATION_CHILD_READY = makeType_1.makeReqType('APPLICATION_CHILD_READY');
exports.APPLICATION_CHILD_STARTED = makeType_1.makeResType('APPLICATION_CHILD_STARTED');
// notification win
exports.APPLICATION_NOTIFICATION_START = makeType_1.makeReqType('APPLICATION_NOTIFICATION_START');
exports.APPLICATION_NOTIFICATION_AWAIT = makeType_1.makeResType('APPLICATION_NOTIFICATION_AWAIT');
exports.APPLICATION_NOTIFICATION_READY = makeType_1.makeReqType('APPLICATION_NOTIFICATION_READY');
exports.APPLICATION_NOTIFICATION_STARTED = makeType_1.makeResType('APPLICATION_NOTIFICATION_STARTED');
// ---- ----
exports.APPLICATION_DRAWER_TOGGLE = makeType_1.makeReqType('APPLICATION_DRAWER_TOGGLE');
exports.APPLICATION_TOGGLE_WINDOW_STATE = makeType_1.makeReqType('APPLICATION_TOGGLE_WINDOW_STATE');
exports.APPLICATION_CUR_WIN_CLOSING = makeType_1.makeResType('APPLICATION_CUR_WIN_CLOSING');
exports.APPLICATION_CUR_WIN_READY_TO_CLOSE = makeType_1.makeReqType('APPLICATION_CUR_WIN_READY_TO_CLOSE');
exports.applicationSetLoadingMsg = redux_actions_1.createAction(exports.APPLICATION_SET_LOADING_MSG, (loadingMsg) => ({ loadingMsg }));
exports.applicationStart = redux_actions_1.createAction(exports.APPLICATION_START);
exports.applicationAwait = redux_actions_1.createAction(exports.APPLICATION_AWAIT);
exports.applicationReady = redux_actions_1.createAction(exports.APPLICATION_READY, (option) => (option));
exports.applicationStarted = redux_actions_1.createAction(exports.APPLICATION_STARTED);
exports.applicationChildStart = redux_actions_1.createAction(exports.APPLICATION_CHILD_START);
exports.applicationChildAwait = redux_actions_1.createAction(exports.APPLICATION_CHILD_AWAIT);
exports.applicationChildReady = redux_actions_1.createAction(exports.APPLICATION_CHILD_READY, (option) => (option));
exports.applicationChildStarted = redux_actions_1.createAction(exports.APPLICATION_CHILD_STARTED);
exports.applicationNotificationStart = redux_actions_1.createAction(exports.APPLICATION_NOTIFICATION_START);
exports.applicationNotificationAwait = redux_actions_1.createAction(exports.APPLICATION_NOTIFICATION_AWAIT);
exports.applicationNotificationReady = redux_actions_1.createAction(exports.APPLICATION_NOTIFICATION_READY, (option) => (option));
exports.applicationNotificationStarted = redux_actions_1.createAction(exports.APPLICATION_NOTIFICATION_STARTED);
exports.applicationDrawerToggle = redux_actions_1.createAction(exports.APPLICATION_DRAWER_TOGGLE);
exports.applicationToggleWindowState = redux_actions_1.createAction(exports.APPLICATION_TOGGLE_WINDOW_STATE);
exports.applicationCurWinClosing = redux_actions_1.createAction(exports.APPLICATION_CUR_WIN_CLOSING);
exports.applicationCurWinReadyToClose = redux_actions_1.createAction(exports.APPLICATION_CUR_WIN_READY_TO_CLOSE, (option) => (option));
// snackbar
exports.APPLICATION_NEW_SNACKBAR = makeType_1.makeReqType('APPLICATION_NEW_SNACKBAR');
exports.APPLICATION_SET_SNACKBAR_STATUS = makeType_1.makeReqType('APPLICATION_SET_SNACKBAR_STATUS');
exports.APPLICATION_PROCESS_SNACKBAR_QUEUE = makeType_1.makeReqType('APPLICATION_PROCESS_SNACKBAR_QUEUE');
exports.APPLICATION_CLOSE_SNACKBAR = makeType_1.makeReqType('APPLICATION_CLOSE_SNACKBAR');
exports.applicationNewSnackbar = redux_actions_1.createAction(exports.APPLICATION_NEW_SNACKBAR, (option) => (option));
exports.applicationSetSnackbarStatus = redux_actions_1.createAction(exports.APPLICATION_SET_SNACKBAR_STATUS, (snackBarOpen) => ({ snackBarOpen }));
exports.applicationProcessSnackbarQueue = redux_actions_1.createAction(exports.APPLICATION_PROCESS_SNACKBAR_QUEUE);
exports.applicationCloseSnackbar = redux_actions_1.createAction(exports.APPLICATION_CLOSE_SNACKBAR, (event, reason) => ({ event, reason }));
// snap dock
exports.APPLICATION_UPDATE_DOCK_STATUS = makeType_1.default('APPLICATION_UPDATE_DOCK_STATUS');
exports.applicationUpdateDockStatus = redux_actions_1.createAction(exports.APPLICATION_UPDATE_DOCK_STATUS, (docked) => ({ docked }));
// launch bar
exports.APPLICATION_LAUNCH_BAR_TOGGLE = makeType_1.makeReqType('APPLICATION_LAUNCH_BAR_TOGGLE');
exports.APPLICATION_LAUNCH_BAR_TOGGLED = makeType_1.makeResType('APPLICATION_LAUNCH_BAR_TOGGLED');
exports.APPLICATION_LAUNCH_BAR_TOGGLE_COLLAPSE = makeType_1.makeReqType('APPLICATION_LAUNCH_BAR_TOGGLE_COLLAPSE');
exports.APPLICATION_LAUNCH_NEW_WINDOW = makeType_1.makeReqType('APPLICATION_LAUNCH_NEW_WINDOW');
exports.APPLICATION_LAUNCH_BAR_CLOSE = makeType_1.makeReqType('APPLICATION_LAUNCH_BAR_CLOSE');
exports.applicationLaunchBarToggle = redux_actions_1.createAction(exports.APPLICATION_LAUNCH_BAR_TOGGLE);
exports.applicationLaunchBarToggled = redux_actions_1.createAction(exports.APPLICATION_LAUNCH_BAR_TOGGLED, (status) => ({ status }));
exports.applicationLaunchBarToggleCollapse = redux_actions_1.createAction(exports.APPLICATION_LAUNCH_BAR_TOGGLE_COLLAPSE);
exports.applicationLaunchNewWindow = redux_actions_1.createAction(exports.APPLICATION_LAUNCH_NEW_WINDOW, (appJson) => (appJson));
exports.applicationLaunchBarClose = redux_actions_1.createAction(exports.APPLICATION_LAUNCH_BAR_CLOSE);
// network
exports.APPLICATION_NETWORK_ONLINE = makeType_1.default('APPLICATION_NETWORK_ONLINE');
exports.applicationNetworkOnline = redux_actions_1.createAction(exports.APPLICATION_NETWORK_ONLINE);
exports.APPLICATION_NETWORK_OFFLINE = makeType_1.default('APPLICATION_NETWORK_OFF_LINE');
exports.applicationNetworkOffline = redux_actions_1.createAction(exports.APPLICATION_NETWORK_OFFLINE);
//# sourceMappingURL=actions.js.map