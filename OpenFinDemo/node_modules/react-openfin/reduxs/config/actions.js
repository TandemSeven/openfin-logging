"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const redux_actions_1 = require("redux-actions");
const makeType_1 = require("../../utils/makeType");
exports.CONFIG_RESET = makeType_1.default('CONFIG_RESET');
// redux
exports.CONFIG_DO_UPDATE_ONE_FIELD = makeType_1.default('CONFIG_DO_UPDATE_ONE_FIELD');
exports.CONFIG_UPDATE_GLOBAL_FILTER_STR = makeType_1.makeReqType('CONFIG_UPDATE_GLOBAL_FILTER_STR');
exports.CONFIG_EXTEND_CUST_STATE = makeType_1.makeReqType('CONFIG_EXTEND_CUST_STATE');
exports.configReset = redux_actions_1.createAction(exports.CONFIG_RESET, (option) => (option));
exports.configDoUpdateOneField = redux_actions_1.createAction(exports.CONFIG_DO_UPDATE_ONE_FIELD, (option) => (option));
exports.configUpdateGlobalFilterStr = redux_actions_1.createAction(exports.CONFIG_UPDATE_GLOBAL_FILTER_STR, (configGlobalFilterString) => ({ configGlobalFilterString }));
exports.configExtendCustState = redux_actions_1.createAction(exports.CONFIG_EXTEND_CUST_STATE, (option) => (option));
// saga
exports.CONFIG_LOAD_FROM_DEXIE = makeType_1.default('CONFIG_LOAD_FROM_DEXIE');
exports.configLoadFromDexie = redux_actions_1.createAction(exports.CONFIG_LOAD_FROM_DEXIE);
exports.CONFIG_DO_UPDATE_ONE_FIELD_IN_DEXIE = makeType_1.default('CONFIG_DO_UPDATE_ONE_FIELD_IN_DEXIE');
exports.configDoUpdateOneFieldInDexie = redux_actions_1.createAction(exports.CONFIG_DO_UPDATE_ONE_FIELD_IN_DEXIE, (option) => (option));
exports.CONFIG_UPDATE_ONE_FIELD = makeType_1.makeReqType('CONFIG_UPDATE_ONE_FIELD');
exports.configUpdateOneField = redux_actions_1.createAction(exports.CONFIG_UPDATE_ONE_FIELD, (tabName, fieldName, value) => ({
    name: `${tabName}.${fieldName}`,
    value,
}));
exports.CONFIG_SELECT_ONE_FIELD = makeType_1.makeReqType('CONFIG_SELECT_ONE_FIELD');
exports.configSelectOneField = redux_actions_1.createAction(exports.CONFIG_SELECT_ONE_FIELD, (option) => (option));
exports.CONFIG_REMOVE_ONE_FIELD = makeType_1.makeReqType('CONFIG_REMOVE_ONE_FIELD');
exports.configRemoveOneField = redux_actions_1.createAction(exports.CONFIG_REMOVE_ONE_FIELD, (option) => (option));
// response actions
exports.CONFIG_SELECT_ONE_FIELD_RES = makeType_1.makeResType('CONFIG_SELECT_ONE_FIELD_RES');
exports.configSelectOneFieldRes = redux_actions_1.createAction(exports.CONFIG_SELECT_ONE_FIELD_RES, (option) => (option));
// optional actions depending on the config application values
exports.CONFIG_UPDATE_NEW_WINDOW_POSITION = makeType_1.default('CONFIG_UPDATE_NEW_WINDOW_POSITION');
exports.CONFIG_UPDATE_NEW_WINDOW_POSITION_ADD_DELTA = makeType_1.default('CONFIG_UPDATE_NEW_WINDOW_POSITION_ADD_DELTA');
exports.CONFIG_UPDATE_NEW_WINDOW_POSITION_RESET_TOP = makeType_1.default('CONFIG_UPDATE_NEW_WINDOW_POSITION_RESET_TOP');
exports.CONFIG_UPDATE_NEW_WINDOW_POSITION_RESET_LEFT = makeType_1.default('CONFIG_UPDATE_NEW_WINDOW_POSITION_RESET_LEFT');
exports.configUpdateNewWindowPosition = redux_actions_1.createAction(exports.CONFIG_UPDATE_NEW_WINDOW_POSITION);
exports.configUpdateNewWindowPositionAddDelta = redux_actions_1.createAction(exports.CONFIG_UPDATE_NEW_WINDOW_POSITION_ADD_DELTA);
exports.configUpdateNewWindowPositionResetTop = redux_actions_1.createAction(exports.CONFIG_UPDATE_NEW_WINDOW_POSITION_RESET_TOP);
exports.configUpdateNewWindowPositionResetLeft = redux_actions_1.createAction(exports.CONFIG_UPDATE_NEW_WINDOW_POSITION_RESET_LEFT);
//# sourceMappingURL=actions.js.map