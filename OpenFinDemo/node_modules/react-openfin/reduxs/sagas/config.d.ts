import { IRootState, IConfigSelectOneFieldResPayload } from '..';
export declare const getOneConfigField: (tabName: any, fieldName: any) => (state: any) => any;
export declare const getNewWindowTop: (state: IRootState) => number;
export declare const getNewWindowLeft: (state: IRootState) => number;
export declare const getNewWindowWidth: (state: IRootState) => number;
export declare const getNewWindowHeight: (state: IRootState) => number;
export declare function handleConfigLoadFromDexie(): IterableIterator<import("@redux-saga/types").SimpleEffect<"CALL", import("redux-saga/effects").CallEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"PUT", import("redux-saga/effects").PutEffectDescriptor<import("redux-actions").Action<import("..").IConfigDoUpdateOneFieldOption>>>>;
export declare function handleConfigUpdateOneField(action: any): IterableIterator<import("@redux-saga/types").SimpleEffect<"PUT", import("redux-saga/effects").PutEffectDescriptor<import("redux-actions").Action<import("..").IConfigDoUpdateOneFieldOption>>>>;
export declare function handleConfigSelectOneField(action: any): IterableIterator<import("@redux-saga/types").SimpleEffect<"SELECT", import("redux-saga/effects").SelectEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"PUT", import("redux-saga/effects").PutEffectDescriptor<import("redux-actions").Action<IConfigSelectOneFieldResPayload>>>>;
export declare function handleConfigRemoveOneField(action: any): IterableIterator<import("@redux-saga/types").SimpleEffect<"CALL", import("redux-saga/effects").CallEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"PUT", import("redux-saga/effects").PutEffectDescriptor<import("redux-actions").Action<import("..").IConfigDoUpdateOneFieldOption>>>>;
export declare function handleConfigUpdateOneFieldInDexie(action: any): IterableIterator<import("@redux-saga/types").SimpleEffect<"CALL", import("redux-saga/effects").CallEffectDescriptor>>;
export declare function handleConfigUpdateNewWindowPosition(): IterableIterator<import("@redux-saga/types").SimpleEffect<"CALL", import("redux-saga/effects").CallEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"SELECT", import("redux-saga/effects").SelectEffectDescriptor> | import("@redux-saga/types").SimpleEffect<"PUT", import("redux-saga/effects").PutEffectDescriptor<import("redux-actions").Action<void>>>>;
export default function (): IterableIterator<import("@redux-saga/types").SimpleEffect<"FORK", import("redux-saga/effects").ForkEffectDescriptor>>;
