"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const effects_1 = require("redux-saga/effects");
const init_1 = require("../../init");
const application_1 = require("./application");
const config_1 = require("./config");
const redux_openfin_1 = require("redux-openfin");
const makeType_1 = require("../../utils/makeType");
const channel_1 = require("redux-openfin/channel");
// logging interceptor
function* handleLogAllActions(action) {
    const state = yield effects_1.select();
    console.log(`${action.type}`, action, 'state after', state);
}
exports.handleLogAllActions = handleLogAllActions;
function* watchAndLogSaga() {
    yield effects_1.takeEvery('*', handleLogAllActions);
}
exports.watchAndLogSaga = watchAndLogSaga;
// client redux correspondent
function* correspondClientReduxAction(action) {
    // console.log("[react-openfin]::ActCorresSaga 0#",`${action.type}`,action);
    if (init_1.default.clientReduxDispatch &&
        (redux_openfin_1.isResAct(action.type) ||
            makeType_1.isResAct(action.type) ||
            (action[channel_1.SHARED_ACTION_ORIGIN_TAG]
                && action[channel_1.SHARED_ACTION_ORIGIN_TAG] !== window[channel_1.SHARED_ACTION_ORIGIN_TAG]
            // do not need to check sharedActionsDict since already has SHARED_ACTION_ORIGIN_TAG field
            // && initState.sharedActionsDict.has(action.type)
            ))) {
        // console.log("[react-openfin]::ActCorresSaga 1#",`${action.type}`,action);
        init_1.default.clientReduxDispatch(action);
    }
}
exports.correspondClientReduxAction = correspondClientReduxAction;
function* clientReduxCorrespondent() {
    yield effects_1.takeEvery('*', correspondClientReduxAction);
}
exports.clientReduxCorrespondent = clientReduxCorrespondent;
function* rootSaga() {
    const sagas = [application_1.default(), config_1.default(), clientReduxCorrespondent()];
    if (init_1.default.config.logActions) {
        sagas.unshift(watchAndLogSaga());
    }
    yield effects_1.all(sagas);
}
exports.default = rootSaga;
//# sourceMappingURL=index.js.map