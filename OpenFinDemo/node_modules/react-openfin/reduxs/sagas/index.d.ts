export declare function handleLogAllActions(action: any): IterableIterator<import("@redux-saga/types").SimpleEffect<"SELECT", import("redux-saga/effects").SelectEffectDescriptor>>;
export declare function watchAndLogSaga(): IterableIterator<import("@redux-saga/types").SimpleEffect<"FORK", import("redux-saga/effects").ForkEffectDescriptor>>;
export declare function correspondClientReduxAction(action: any): IterableIterator<any>;
export declare function clientReduxCorrespondent(): IterableIterator<import("@redux-saga/types").SimpleEffect<"FORK", import("redux-saga/effects").ForkEffectDescriptor>>;
export default function rootSaga(): IterableIterator<import("@redux-saga/types").CombinatorEffect<"ALL", IterableIterator<import("@redux-saga/types").SimpleEffect<"FORK", import("redux-saga/effects").ForkEffectDescriptor>>>>;
